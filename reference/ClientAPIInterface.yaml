openapi: 3.0.0
x-stoplight:
  id: 6d5nscjmqjk1e
info:
  title: Sonic-Host  クライアントアプリ用API
  version: '1.0'
  description: |-
    Sonic-Hostのクライアントアプリから使用できるAPIの一覧を管理。
    ユーザがサイトを管理するためのクライアント管理画面から打たれるAPIの一覧となる。
  contact:
    name: Hayato Takahashi
    email: hayato.takahashi.b@gmail.com
servers:
  - url: 'http://localhost:8000'
    description: Local
paths:
  /notifications:
    get:
      summary: お知らせ通知一覧取得
      tags: []
      responses:
        '200':
          description: お知らせの一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: hnea2xcyqcqkn
                  allOf:
                    - $ref: ../models/ID.yaml
                      x-stoplight:
                        id: 88903upkherc5
                    - $ref: '#/components/schemas/Notification'
                      x-stoplight:
                        id: 8ro2phmqlsa7i
                    - $ref: ../models/CreatedAt.yaml
                      x-stoplight:
                        id: bvcu1975nkd4i
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-notifications
      security:
        - ID-Token: []
      description: お知らせ詳細の一覧を返却する。
  '/notifications/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: お知らせを特定するためのID
    get:
      summary: お知らせ通知詳細取得
      tags: []
      responses:
        '200':
          description: |-
            お知らせの詳細情報の取得。
            使うかな？
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/ID.yaml
                    x-stoplight:
                      id: dk0bl8v3jel1a
                  - $ref: '#/components/schemas/Notification'
                    x-stoplight:
                      id: pa3dc8gl90rtn
                  - $ref: ../models/CreatedAt.yaml
                    x-stoplight:
                      id: r93bobimsiguk
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
          headers: {}
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-notifications-id
      description: 管理者から通知されたお知らせなどを取得する。
      security:
        - ID-Token: []
    delete:
      summary: お知らせ通知詳細削除
      operationId: delete-notifications-id
      responses:
        '200':
          description: お知らせ情報削除完了
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - type: object
                    x-stoplight:
                      id: 9d6sfw9muak50
                    properties:
                      data:
                        x-stoplight:
                          id: bji41ol6ecq0o
                        allOf:
                          - $ref: ../models/ID.yaml
                            x-stoplight:
                              id: biqmf7fjm7ce0
                          - $ref: '#/components/schemas/Notification'
                            x-stoplight:
                              id: vu9kselr4nw1q
                          - $ref: ../models/CreatedAt.yaml
                            x-stoplight:
                              id: ovode1hxqyr28
                    required:
                      - data
              examples:
                お知らせ削除完了:
                  value:
                    message:
                      type: success
                      display: お知らせの削除が完了しました
                    data:
                      id: '165923165886004186925843853365'
                      title: 管理画面の新バージョンのお知らせ
                      content: 管理画面の新バージョンがリリースされました。\n以下の修正が実施されております。\n・軽微なバグの修正
                      isRead: false
                      createdAt: '2019-08-24T14:15:22Z'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      security:
        - ID-Token: []
      description: ユーザが選択したお知らせ詳細を削除する。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current:
                  x-stoplight:
                    id: zeqfxxhfyn3mn
                  allOf:
                    - $ref: ../models/ID.yaml
                      x-stoplight:
                        id: inajmovqwmfd0
                    - $ref: '#/components/schemas/Notification'
                      x-stoplight:
                        id: hvptewht88jc9
                    - $ref: ../models/CreatedAt.yaml
                      x-stoplight:
                        id: l65xyub6dqxqi
              required:
                - current
        description: 削除するお知らせ情報
    put:
      summary: お知らせ通知詳細更新
      operationId: put-notifications-id
      responses:
        '200':
          description: お知らせの既読状態の更新完了
          content:
            application/json:
              schema:
                allOf:
                  - x-stoplight:
                      id: 2q22fz6gkeehf
                    properties:
                      data:
                        $ref: '#/components/schemas/NotificationRead'
                        x-stoplight:
                          id: np5p1ndesiot3
                    required:
                      - data
                type: object
              examples:
                既読状態の更新に成功:
                  value:
                    data:
                      isRead: true
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemError'
        '504':
          $ref: '#/components/responses/TimeoutError'
      security:
        - ID-Token: []
      description: ユーザが選択したお知らせ詳細情報の既読情報を更新する。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current:
                  x-stoplight:
                    id: nd6y06n6ilc4o
                  allOf:
                    - $ref: ../models/ID.yaml
                      x-stoplight:
                        id: dn0q10gm46ia5
                    - $ref: '#/components/schemas/Notification'
                      x-stoplight:
                        id: v775l6laj8rnx
                    - $ref: ../models/CreatedAt.yaml
                      x-stoplight:
                        id: 128vae18gprfm
                  description: 現在クライアント側で認識しているお知らせ状態
                data:
                  $ref: '#/components/schemas/NotificationRead'
                  x-stoplight:
                    id: xuxdq1o373zsa
              required:
                - current
                - data
        description: ''
  /site:
    get:
      summary: サイト一覧取得
      tags: []
      responses:
        '200':
          description: ユーザに紐づくサイト一覧を取得
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: 3odtnu4a9x592
                  allOf:
                    - $ref: ../models/ID.yaml
                      x-stoplight:
                        id: ztskpt31kf60j
                    - $ref: '#/components/schemas/Site'
                      x-stoplight:
                        id: irqd2tsbr2z9t
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-site
      description: ユーザが登録したサイトのリスト情報を返却する。
  '/site/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: サイト識別子
    get:
      summary: サイト情報取得
      tags: []
      responses:
        '200':
          description: サイトの詳細情報取得
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/ID.yaml
                  - $ref: '#/components/schemas/Site'
                    x-stoplight:
                      id: 65ed86n5l83n1
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-site-id
      description: ユーザが登録した特定のサイトに関する詳細情報を取得する。
      security:
        - ID-Token: []
    post:
      summary: サイト仮登録
      operationId: post-site-id
      responses:
        '200':
          description: OK
      description: ユーザが新たにサイトを登録する。
      security:
        - ID-Token: []
    put:
      summary: サイト更新
      operationId: put-site-id
      responses:
        '200':
          description: OK
      description: ユーザが指定したサイトの情報を更新する。
      security:
        - ID-Token: []
    delete:
      summary: サイト削除
      operationId: delete-site-id
      responses:
        '200':
          description: OK
      security:
        - ID-Token: []
      description: ユーザが指定したサイトの情報を削除する。
  /contacts:
    get:
      summary: お問い合わせ一覧取得
      tags: []
      responses:
        '200':
          description: お問い合わせの一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: ../models/ID.yaml
                        - $ref: '#/components/schemas/Contact'
                        - $ref: '#/components/schemas/ContactClosed'
                required:
                  - data
              examples:
                お問い合わせ一覧取得成功:
                  value:
                    data:
                      - id: '165923165886004186925843853365'
                        category: 登録されたサイトについて
                        title: サイト更新のタイミングについて
                        content: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
                      - id: '165923165886004186925843853365'
                        category: お支払内容
                        title: 請求金額の不一致について
                        content: |-
                          請求金額についてこちらで計算したところ、実際に請求された内容と一致してないように見えます。
                          お手数ですが、ご確認をお願いできますでしょうか。
                起票済みのお問い合わせなし:
                  value:
                    data: []
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-contacts
      description: ユーザが出したお問い合わせ情報の一覧を取得する。
      security:
        - ID-Token: []
    post:
      summary: お問い合わせ新規追加
      operationId: post-contacts
      responses:
        '200':
          description: お問い合わせ新規追加成功
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - type: object
                    properties:
                      data:
                        description: ユーザが入力したお問い合わせの情報
                        type: array
                        items:
                          allOf:
                            - $ref: ../models/ID.yaml
                            - $ref: '#/components/schemas/Contact'
                            - $ref: '#/components/schemas/ContactClosed'
                    required:
                      - data
              examples:
                お問い合わせ追加成功:
                  value:
                    message:
                      type: success
                      display: |-
                        お問い合わせが受け付けられました。
                        回答があるまでしばらくお待ちください。
                    data:
                      id: '165923165886004186925843853365'
                      category: 登録されたサイトについて
                      title: サイト更新のタイミングについて
                      content: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - $ref: ../models/Error.yaml
              examples:
                バリデーションエラー:
                  value:
                    message:
                      type: failure
                      display: |-
                        お問い合わせの送信に失敗しました。
                        入力項目が正しいか再度ご確認ください。
                    error:
                      type: validation
                      detail: '${name}欄の入力は必須になります。'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      description: お問い合わせを新規で追加する。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Contact'
              required:
                - data
        description: お問い合わせ新規追加する際に必要なユーザ側で入力した情報をリクエストとして送信。
      x-internal: false
      security:
        - ID-Token: []
  '/contacts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: お問い合わせ識別子
    get:
      summary: お問い合わせ詳細取得
      tags: []
      responses:
        '200':
          description: お問い合わせ詳細取得成功
          content:
            application/json:
              schema:
                description: お問い合わせに対するメッセージやり取りの内容
                allOf:
                  - $ref: ../models/ID.yaml
                  - $ref: '#/components/schemas/Contact'
                  - $ref: '#/components/schemas/ContactClosed'
                  - type: object
                    properties:
                      replies:
                        type: array
                        items:
                          allOf:
                            - $ref: ../models/ID.yaml
                            - $ref: '#/components/schemas/ContactReply'
                            - $ref: ../models/CreatedAt.yaml
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-contacts-id
      description: ユーザが出したお問い合わせの詳細情報を取得する。
      security:
        - ID-Token: []
    post:
      summary: お問い合わせ追加
      operationId: post-contacts-id
      responses:
        '200':
          description: お問い合わせの返信追加に成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                        required:
                          - replies
                        properties:
                          replies:
                            type: array
                            items:
                              allOf:
                                - $ref: ../models/ID.yaml
                                - $ref: '#/components/schemas/ContactReply'
                                - $ref: ../models/CreatedAt.yaml
                    required:
                      - data
              examples:
                お問い合わせ返信追加に成功:
                  value:
                    data:
                      replies:
                        - content: お問い合わせありがとうございます。\n....
                          from: admin
                          createdAt: '2019-08-24T14:15:22Z'
                    '':
                      message:
                        type: success
                        display: APIの処理が成功しました。
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      description: ユーザが新規にお問い合わせを発行するAPI。
      security:
        - ID-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - replies
                  properties:
                    replies:
                      $ref: '#/components/schemas/ContactReply'
              required:
                - data
            examples:
              お問い合わせ返信追加依頼:
                value:
                  data:
                    replies:
                      content: お問い合わせありがとうございます。\n....
                      from: admin
        description: お問い合わせ返信の内容を送信
    put:
      summary: お問い合わせ更新
      operationId: put-contacts-id
      responses:
        '200':
          description: |-
            お問い合わせ更新完了
            お問い合わせをクローズ状態に更新
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ContactClosed'
        '400':
          description: 業務エラーによる更新の失敗
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - $ref: ../models/Error.yaml
              examples:
                リソース不一致によるエラー:
                  value:
                    message:
                      type: modal
                      display: |-
                        お客様の情報が最新でない可能性がございます。
                        お手数ですが画面を更新の上、再度お試しください。
                    error:
                      type: buisiness
                      detail: リソース不一致によるエラー
                      action: formSaveReload
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      description: ユーザが出したお問い合わせが無事解決し、クローズするときのAPI。
      security:
        - ID-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ContactClosed'
                current:
                  allOf:
                    - $ref: ../models/ID.yaml
                    - $ref: '#/components/schemas/Contact'
                    - $ref: '#/components/schemas/ContactClosed'
                    - type: object
                      properties:
                        replies:
                          type: array
                          items:
                            allOf:
                              - $ref: ../models/ID.yaml
                              - $ref: '#/components/schemas/ContactReply'
                              - $ref: ../models/CreatedAt.yaml
                      required:
                        - replies
                  description: 現在ユーザが認識しているリソース情報
              required:
                - data
                - current
        description: ''
    delete:
      summary: お問い合わせ削除
      operationId: delete-contacts-id
      responses:
        '200':
          description: お問い合わせ削除成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: ../models/ID.yaml
                          - $ref: '#/components/schemas/Contact'
                          - $ref: '#/components/schemas/ContactClosed'
                          - type: object
                            properties:
                              replies:
                                type: array
                                items:
                                  allOf:
                                    - $ref: ../models/ID.yaml
                                    - $ref: '#/components/schemas/ContactReply'
                                    - $ref: ../models/CreatedAt.yaml
                            required:
                              - replies
                    required:
                      - data
        '400':
          description: 業務エラーによる削除失敗。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Message.yaml
                  - $ref: ../models/Error.yaml
              examples:
                リソース不一致による失敗:
                  value:
                    message:
                      type: modal
                      display: |-
                        お客様の情報が最新でない可能性がございます。
                        お手数ですが画面を更新の上、再度お試しください。
                    error:
                      type: buisiness
                      detail: リソース不一致によるエラー
                      action: formSaveReload
                未クローズ状態での削除依頼エラー:
                  value:
                    message:
                      type: failure
                      display: |-
                        未クローズ状態のお問い合わせに対して削除依頼が発行されました。
                        お手数ですが、先にクローズ処理をお願いいたします。
                    error:
                      type: buisiness
                      detail: 未クローズ状態のお問い合わせに対して削除依頼
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      description: |-
        ユーザが出したお問い合わせがクローズされており、不要になった際にユーザ側から削除する。
        削除することで画面に表示されるお問い合わせが整理される。
      security:
        - ID-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current:
                  allOf:
                    - $ref: ../models/ID.yaml
                    - $ref: '#/components/schemas/Contact'
                    - $ref: '#/components/schemas/ContactClosed'
                    - type: object
                      properties:
                        replies:
                          type: array
                          items:
                            allOf:
                              - $ref: ../models/ID.yaml
                              - $ref: '#/components/schemas/ContactReply'
                              - $ref: ../models/CreatedAt.yaml
                      required:
                        - replies
              required:
                - current
        description: ''
  '/site/{id}/domain':
    get:
      summary: サイト用ドメイン取得
      tags: []
      responses: {}
      operationId: get-site-domain
      description: サイトに登録しているドメイン情報を取得するAPI
      security:
        - ID-Token: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: サイト識別子
    post:
      summary: サイト用ドメイン追加
      operationId: post-site-id-domain
      responses:
        '200':
          description: OK
      description: |-
        サイト用ドメインを追加するためのAPI。
        このAPIによって登録されたドメインがユーザが登録したいサイトを表示するときのドメインとなる。
      security:
        - ID-Token: []
    put:
      summary: サイト用ドメイン更新
      operationId: put-site-id-domain
      responses:
        '200':
          description: OK
      description: サイト用ドメインの情報を更新する。
      security:
        - ID-Token: []
components:
  schemas:
    Contact:
      title: Contact
      x-stoplight:
        id: kzi8aaozbfwtt
      type: object
      description: |-
        お問い合わせ起票用オブジェクト。  
        ユーザがお問い合わせ起票時に入力する項目が入っている。
      x-examples:
        支払いについてのお問い合わせ:
          category: お支払い金額について
          title: 支払金額が計算内容と一致しない件について
          content: |-
            支払金額を計算したところ、一致しておりません。
            計算の根拠をお伺いさせていただきたいのですが、よろしいでしょうか。
      x-internal: true
      properties:
        category:
          type: string
          description: |-
            お問い合わせカテゴリ  
            用意されたパターンに一致する場合のみ許容
          example: 登録されたサイトについて
        title:
          type: string
          description: お問い合わせタイトル
          minLength: 1
          maxLength: 256
          example: サイト更新のタイミングについて
        content:
          type: string
          description: お問い合わせ内容
          minLength: 1
          maxLength: 2048
          example: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
      required:
        - category
        - title
        - content
    ContactReply:
      title: ContactReply
      x-stoplight:
        id: 5ocji5zvb6y8y
      type: object
      description: お知らせ通知に対する返信内容を示す。
      properties:
        content:
          type: string
          description: 返信内容のメッセージ
          minLength: 1
          maxLength: 2048
          example: お問い合わせありがとうございます。\n....
        from:
          type: string
          description: 返信者
          enum:
            - customer
            - admin
          example: admin
      required:
        - content
        - from
    ContactClosed:
      title: ContactClosed
      x-stoplight:
        id: m2hw3xl7tgl2e
      type: object
      description: |-
        お問い合わせを閉じる際に必要となる情報
        将来的にはお問い合わせに対する評価情報もここに格納する想定
      properties:
        closed:
          type: boolean
          default: false
          description: 既に該当のお問い合わせは解決済みで閉じられているかどうか
      required:
        - closed
    Notification:
      title: Notification
      x-stoplight:
        id: yv0tv1wj5lq7w
      description: お知らせ内容
      allOf:
        - type: object
          properties:
            title:
              type: string
              x-stoplight:
                id: n1juyzehcn6pb
              minLength: 1
              maxLength: 256
              example: 管理画面の新バージョンのお知らせ
            content:
              type: string
              x-stoplight:
                id: wgsovt51wydld
              minLength: 1
              maxLength: 2048
              example: 管理画面の新バージョンがリリースされました。\n以下の修正が実施されております。\n・軽微なバグの修正
          required:
            - title
            - content
        - $ref: '#/components/schemas/NotificationRead'
          x-stoplight:
            id: 348z4ca7dmonq
    NotificationRead:
      title: NotificationRead
      x-stoplight:
        id: m0enoxi1bv8tt
      type: object
      description: お知らせが既読かどうか
      properties:
        isRead:
          type: boolean
          x-stoplight:
            id: henkmz7gf5x8p
          default: false
          description: Trueであれば、お知らせは既読
      required:
        - isRead
    Site:
      title: Site
      x-stoplight:
        id: vy62orgisqgbf
      type: object
      description: ユーザが登録したサイト情報
      properties:
        name:
          type: string
          x-stoplight:
            id: 6l8pnwtgmebe7
          description: サイト名
          minLength: 1
          maxLength: 32
        domain:
          type: string
          x-stoplight:
            id: ga6zvr3clqkpv
          description: 登録ドメイン
          minLength: 1
          maxLength: 63
        optimization:
          type: object
          x-stoplight:
            id: as58bfukixbwo
          description: 最適化設定
          required:
            - css
            - image
          properties:
            css:
              type: boolean
              x-stoplight:
                id: yv9mh1069agjt
              description: CSS最適化設定
              default: true
            image:
              type: boolean
              x-stoplight:
                id: 7jy70mcpnbnv5
              description: 画像最適化設定
              default: true
      required:
        - name
        - domain
        - optimization
      x-examples: {}
    SubDomain:
      title: SubDomain
      x-stoplight:
        id: k4f1zkgolifkv
      type: object
      description: |-
        サブドメイン情報を格納。
        ドメインはサイト側で管理。
      properties:
        nameServers:
          type: array
          x-stoplight:
            id: 8vr8r4t798tan
          minItems: 4
          maxItems: 4
          uniqueItems: true
          description: ドメインに紐づけるネームサーバーのIPアドレス達
          items:
            x-stoplight:
              id: bs2o5h6zc5xcz
            type: string
            minLength: 4
            maxLength: 15
            example: 24.32.128.3
        services:
          type: object
          x-stoplight:
            id: 4rw3cusewf4hd
          required:
            - site
            - mail
          description: 各サービスで使用するサブドメイン
          properties:
            site:
              type: string
              x-stoplight:
                id: 2okoxtxfh29a5
              description: サイト用サブドメイン
              minLength: 1
              maxLength: 63
              example: blog
            mail:
              type: string
              x-stoplight:
                id: pa835fqf1j87m
              description: メール用サブドメイン
              minLength: 1
              maxLength: 63
              example: mail
      required:
        - nameServers
        - services
  securitySchemes:
    ID-Token:
      name: Authorization
      type: apiKey
      in: header
  requestBodies: {}
  examples:
    ResourceMismatchError:
      value:
        description: Example shared example
        type: object
        properties:
          id:
            type: string
        required:
          - id
  responses:
    NotAuthorized:
      description: 未ログイン状態・トークンの有効期限切れ状態でのAPIリクエストが実施されたときに返却されるレスポンス
      content:
        application/json:
          schema:
            $ref: ../models/NotAuthorizedResponse.yaml
          examples:
            未認証エラー:
              value:
                error:
                  type: system
                  detail: 未認証状態によるAPI打鍵エラー
    SystemBlockage:
      description: システム閉塞時のエラーレスポンス
      content:
        application/json:
          schema:
            $ref: ../models/SystemBlockageResponse.yaml
          examples:
            システム閉塞メッセージ:
              value:
                message:
                  type: modal
                  display: |-
                    以下の時間帯で現在システムの使用ができません。
                     2023年3月1日 12:00 ~ 2023年3月1日 15:00
                    お手数ですが、上記時間外で再度ログインを実施いただくようお願いいたします。
                error:
                  type: system
                  detail: システム閉塞の実施期間中によるエラー
    SystemError:
      description: バックエンド側で想定外のシステムエラーが発生した時に表示されるエラーレスポンス
      content:
        application/json:
          schema:
            $ref: ../models/SystemErrorResponse.yaml
          examples:
            システムエラー:
              value:
                message:
                  type: modal
                  display: |-
                    想定外のエラーが発生しました。
                    大変お手数ですが、暫くしてから再度お試しください。
                    暫くしても解決しない場合はお手数ですが、「お問い合わせ」画面よりお問い合わせください。
                error:
                  type: system
                  detail: 想定外のバックエンドエラー発生
    TimeoutError:
      description: サーバー側の処理が遅く、タイムアウトエラーが発生した時のエラーレスポンス
      content:
        application/json:
          schema:
            $ref: ../models/TiemoutErrorResponse.yaml
          examples:
            タイムアウトエラー:
              value:
                message:
                  type: modal
                  display: |-
                    処理に時間がかかっており失敗しました。
                    お手数おかけしますが、暫くしてから再度お試しください。
                error:
                  type: system
                  detail: サーバーの処理に時間がかかっていることによるタイムアウトエラー
    TooManyRequestError:
      description: サービスへのアクセスが込み合っているときのエラーレスポンス
      content:
        application/json:
          schema:
            $ref: ../models/TooManyRequestErrorResponse.yaml
          examples:
            リクエスト過多:
              value:
                message:
                  type: modal
                  display: |-
                    現在大変込み合っております。
                    お手数おかけしますが、暫くしてから再度お試しください。
                error:
                  type: system
                  detail: リクエスト過多によるエラー
x-internal: true
security:
  - ID-Token: []
