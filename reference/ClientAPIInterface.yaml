openapi: 3.0.0
x-stoplight:
  id: 6d5nscjmqjk1e
info:
  title: Sonic-Host  クライアントアプリ用API
  version: '1.0'
  description: |-
    Sonic-Hostのクライアントアプリから使用できるAPIの一覧を管理。
    ユーザがサイトを管理するためのクライアント管理画面から打たれるAPIの一覧となる。
  contact:
    name: Hayato Takahashi
    email: hayato.takahashi.b@gmail.com
servers:
  - url: 'http://localhost:8000'
    description: Local
paths:
  /notifications:
    get:
      summary: お知らせ通知一覧取得
      tags: []
      responses: {}
      operationId: get-notifications
      security:
        - ID-Token: []
      description: お知らせ詳細の一覧を返却する。
  '/notifications/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: お知らせを特定するためのID
    get:
      summary: お知らせ通知詳細取得
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
          headers: {}
        '404':
          description: User Not Found
      operationId: get-notifications-id
      description: 管理者から通知されたお知らせなどを取得する。
      security:
        - ID-Token: []
    delete:
      summary: お知らせ通知詳細削除
      operationId: delete-notifications-id
      responses:
        '200':
          description: OK
      security:
        - ID-Token: []
      description: ユーザが選択したお知らせ詳細を削除する。
    put:
      summary: お知らせ通知詳細更新
      operationId: put-notifications-id
      responses:
        '200':
          description: OK
      security:
        - ID-Token: []
      description: ユーザが選択したお知らせ詳細情報の既読情報を更新する。
  /site:
    get:
      summary: サイト一覧取得
      tags: []
      responses: {}
      operationId: get-site
      description: ユーザが登録したサイトのリスト情報を返却する。
  '/site/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: サイト識別子
    get:
      summary: サイト情報取得
      tags: []
      responses: {}
      operationId: get-site-id
      description: ユーザが登録した特定のサイトに関する詳細情報を取得する。
      security:
        - ID-Token: []
    post:
      summary: サイト追加
      operationId: post-site-id
      responses:
        '200':
          description: OK
      description: ユーザが新たにサイトを登録する。
      security:
        - ID-Token: []
    put:
      summary: サイト更新
      operationId: put-site-id
      responses:
        '200':
          description: OK
      description: ユーザが指定したサイトの情報を更新する。
      security:
        - ID-Token: []
    delete:
      summary: サイト削除
      operationId: delete-site-id
      responses:
        '200':
          description: OK
      security:
        - ID-Token: []
      description: ユーザが指定したサイトの情報を削除する。
  /contacts:
    get:
      summary: お問い合わせ一覧取得
      tags: []
      responses:
        '200':
          description: お問い合わせの一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ID'
                        - $ref: '#/components/schemas/Contact'
                required:
                  - data
              examples:
                お問い合わせ一覧取得成功:
                  value:
                    data:
                      - id: '165923165886004186925843853365'
                        category: 登録されたサイトについて
                        title: サイト更新のタイミングについて
                        content: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
                      - id: '165923165886004186925843853365'
                        category: お支払内容
                        title: 請求金額の不一致について
                        content: |-
                          請求金額についてこちらで計算したところ、実際に請求された内容と一致してないように見えます。
                          お手数ですが、ご確認をお願いできますでしょうか。
                起票済みのお問い合わせなし:
                  value:
                    data: []
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      operationId: get-contacts
      description: ユーザが出したお問い合わせ情報の一覧を取得する。
      security:
        - ID-Token: []
    post:
      summary: お問い合わせ新規追加
      operationId: post-contacts
      responses:
        '200':
          description: お問い合わせ新規追加成功
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Message'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/ID'
                          - $ref: '#/components/schemas/Contact'
                        description: ユーザが入力したお問い合わせの情報
                    required:
                      - data
              examples:
                お問い合わせ追加成功:
                  value:
                    message:
                      type: success
                      display: |-
                        お問い合わせが受け付けられました。
                        回答があるまでしばらくお待ちください。
                    data:
                      id: '165923165886004186925843853365'
                      category: 登録されたサイトについて
                      title: サイト更新のタイミングについて
                      content: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Message'
                  - $ref: '#/components/schemas/Error'
              examples:
                バリデーションエラー:
                  value:
                    message:
                      type: failure
                      display: |-
                        お問い合わせの送信に失敗しました。
                        入力項目が正しいか再度ご確認ください。
                    error:
                      type: validation
                      detail: '${name}欄の入力は必須になります。'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '429':
          $ref: '#/components/responses/TooManyRequestError'
        '500':
          $ref: '#/components/responses/SystemError'
        '503':
          $ref: '#/components/responses/SystemBlockage'
        '504':
          $ref: '#/components/responses/TimeoutError'
      description: お問い合わせを新規で追加する。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Contact'
              required:
                - data
        description: お問い合わせ新規追加する際に必要なユーザ側で入力した情報をリクエストとして送信。
      x-internal: false
  '/contacts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: お問い合わせ識別子
    get:
      summary: お問い合わせ詳細取得
      tags: []
      responses: {}
      operationId: get-contacts-id
      description: ユーザが出したお問い合わせの詳細情報を取得する。
      security:
        - ID-Token: []
    post:
      summary: お問い合わせ追加
      operationId: post-contacts-id
      responses: {}
      description: ユーザが新規にお問い合わせを発行するAPI。
      security:
        - ID-Token: []
      requestBody:
        $ref: '#/components/requestBodies/Request'
    put:
      summary: お問い合わせ更新
      operationId: put-contacts-id
      responses:
        '200':
          description: OK
      description: ユーザが出したお問い合わせの情報を更新する。
      security:
        - ID-Token: []
    delete:
      summary: お問い合わせ削除
      operationId: delete-contacts-id
      responses:
        '200':
          description: OK
      description: ユーザが出したお問い合わせが無事解決し、クローズするときのAPI。
      security:
        - ID-Token: []
  '/site/{id}/domain':
    get:
      summary: サイト用ドメイン取得
      tags: []
      responses: {}
      operationId: get-site-domain
      description: サイトに登録しているドメイン情報を取得するAPI
      security:
        - ID-Token: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: サイト識別子
    post:
      summary: サイト用ドメイン追加
      operationId: post-site-id-domain
      responses:
        '200':
          description: OK
      description: |-
        サイト用ドメインを追加するためのAPI。
        このAPIによって登録されたドメインがユーザが登録したいサイトを表示するときのドメインとなる。
      security:
        - ID-Token: []
    put:
      summary: サイト用ドメイン更新
      operationId: put-site-id-domain
      responses:
        '200':
          description: OK
      description: サイト用ドメインの情報を更新する。
      security:
        - ID-Token: []
components:
  schemas:
    ID:
      title: ID
      x-stoplight:
        id: fyb5d6duohfk8
      type: object
      description: |-
        バックエンド側で採番されるユニークなID。  
        時間順にソートされるようになっている。
      example: '165923165886004186925843853365'
      properties:
        id:
          type: string
          example: '165923165886004186925843853365'
          minLength: 30
          maxLength: 30
          description: バックエンド側で採番されるタイムID
      required:
        - id
    Message:
      title: Message
      x-stoplight:
        id: 7c6032af92ef3
      type: object
      description: APIの処理の結果通知メッセージ。
      x-internal: false
      x-examples:
        成功時:
          message:
            type: success
            display: APIの処理が成功しました。
        失敗時:
          message:
            type: failure
            display: |-
              お客様のステータスが最新ではございません。
              お手数ですがページを更新の上再度実施をお願いいたします。
        モーダル（ユーザ確認）:
          message:
            type: modal
            display: |-
              しばらくサイトが使えなくなる可能性がございます。
              それでも実施しますか？
      properties:
        message:
          type: object
          minProperties: 2
          maxProperties: 2
          additionalProperties: false
          description: ユーザに通知するメッセージ内容
          required:
            - type
            - display
          properties:
            type:
              type: string
              example: success
              description: 表示種別。成功時・失敗時・モーダルの３パターン
            display:
              type: string
              example: APIの処理が成功しました。
              description: 表示するメッセージ内容
      required:
        - message
    Error:
      title: Error
      x-stoplight:
        id: vljze5he4jg20
      type: object
      description: APIの処理結果でエラーが発生した際のエラー通知オブジェクト
      properties:
        error:
          type: object
          required:
            - type
            - detail
          description: APIのエラー結果詳細
          minProperties: 2
          maxProperties: 2
          additionalProperties: false
          properties:
            type:
              type: string
              example: validation
              enum:
                - 'validation,'
                - buisiness
                - system
              description: エラーの種類。
            detail:
              type: string
              description: エラーの詳細説明部分
              example: '${name}欄の入力は必須になります。'
      required:
        - error
      x-examples:
        バリデーションエラー:
          error:
            type: 'validation,'
            detail: '${name}欄の入力は必須になります。'
        業務エラー:
          error:
            type: 'buisiness,'
            detail: 選択されたサイトは既に削除済み
        システムエラー:
          error:
            type: 'system,'
            detail: システム閉塞による未受付状態
    Contact:
      title: Contact
      x-stoplight:
        id: kzi8aaozbfwtt
      type: object
      description: |-
        お問い合わせ起票用オブジェクト。  
        ユーザがお問い合わせ起票時に入力する項目が入っている。
      x-examples:
        支払いについてのお問い合わせ:
          category: お支払い金額について
          title: 支払金額が計算内容と一致しない件について
          content: |-
            支払金額を計算したところ、一致しておりません。
            計算の根拠をお伺いさせていただきたいのですが、よろしいでしょうか。
      x-internal: true
      properties:
        category:
          type: string
          description: |-
            お問い合わせカテゴリ  
            用意されたパターンに一致する場合のみ許容
          example: 登録されたサイトについて
        title:
          type: string
          description: お問い合わせタイトル
          minLength: 1
          maxLength: 256
          example: サイト更新のタイミングについて
        content:
          type: string
          description: お問い合わせ内容
          minLength: 1
          maxLength: 2048
          example: サイトが更新されるタイミングはいつでしょうか。\nまだ更新されてないように見えます。
      required:
        - category
        - title
        - content
  securitySchemes:
    ID-Token:
      name: Authorization
      type: apiKey
      in: header
  requestBodies: {}
  examples: {}
  responses:
    NotAuthorized:
      description: 未ログイン状態・トークンの有効期限切れ状態でのAPIリクエストが実施されたときに返却されるレスポンス
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            未認証エラー:
              value:
                error:
                  type: system
                  detail: 未認証状態によるAPI打鍵エラー
    SystemBlockage:
      description: システム閉塞時のエラーレスポンス
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Message'
              - $ref: '#/components/schemas/Error'
          examples:
            システム閉塞メッセージ:
              value:
                message:
                  type: modal
                  display: |-
                    以下の時間帯で現在システムの使用ができません。
                     2023年3月1日 12:00 ~ 2023年3月1日 15:00
                    お手数ですが、上記時間外で再度ログインを実施いただくようお願いいたします。
                error:
                  type: system
                  detail: システム閉塞の実施期間中によるエラー
    SystemError:
      description: バックエンド側で想定外のシステムエラーが発生した時に表示されるエラーレスポンス
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Message'
              - $ref: '#/components/schemas/Error'
          examples:
            システムエラー:
              value:
                message:
                  type: modal
                  display: |-
                    想定外のエラーが発生しました。
                    大変お手数ですが、暫くしてから再度お試しください。
                    暫くしても解決しない場合はお手数ですが、「お問い合わせ」画面よりお問い合わせください。
                error:
                  type: system
                  detail: 想定外のバックエンドエラー発生
    TimeoutError:
      description: サーバー側の処理が遅く、タイムアウトエラーが発生した時のエラーレスポンス
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Message'
              - $ref: '#/components/schemas/Error'
          examples:
            タイムアウトエラー:
              value:
                message:
                  type: modal
                  display: |-
                    処理に時間がかかっており失敗しました。
                    お手数おかけしますが、暫くしてから再度お試しください。
                error:
                  type: system
                  detail: サーバーの処理に時間がかかっていることによるタイムアウトエラー
    TooManyRequestError:
      description: サービスへのアクセスが込み合っているときのエラーレスポンス
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Message'
              - $ref: '#/components/schemas/Error'
          examples:
            リクエスト過多:
              value:
                message:
                  type: modal
                  display: |-
                    現在大変込み合っております。
                    お手数おかけしますが、暫くしてから再度お試しください。
                error:
                  type: system
                  detail: リクエスト過多によるエラー
x-internal: true
security:
  - ID-Token: []
